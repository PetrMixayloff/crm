"""update database

Revision ID: 05b8081b7bf0
Revises: b2e0ca2c9f22
Create Date: 2020-08-25 17:17:49.618867

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '05b8081b7bf0'
down_revision = 'b2e0ca2c9f22'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_usershoprelation_id', table_name='usershoprelation')
    op.drop_table('usershoprelation')
    op.drop_index('ix_productshoprelation_id', table_name='productshoprelation')
    op.drop_table('productshoprelation')
    op.drop_index('ix_productimagerelation_id', table_name='productimagerelation')
    op.drop_table('productimagerelation')
    op.alter_column('blacklisttoken', 'blacklisted_on',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('file', sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'file', 'product', ['product_id'], ['id'])
    op.add_column('product', sa.Column('old_price', sa.Float(), nullable=True))
    op.add_column('product', sa.Column('price', sa.Float(), nullable=True))
    op.add_column('product', sa.Column('quantity', sa.Integer(), nullable=True))
    op.add_column('product', sa.Column('shop_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('product', sa.Column('show_on_store', sa.Boolean(), nullable=False))
    op.create_foreign_key(None, 'product', 'shop', ['shop_id'], ['id'])
    op.add_column('shop', sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('shop', sa.Column('staff_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'shop', 'user', ['staff_id'], ['id'])
    op.create_foreign_key(None, 'shop', 'user', ['owner_id'], ['id'])
    op.add_column('user', sa.Column('position', sa.String(length=255), nullable=True, comment='Должность сотрудника'))
    op.add_column('user', sa.Column('shop_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'user', 'shop', ['shop_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'shop_id')
    op.drop_column('user', 'position')
    op.drop_constraint(None, 'shop', type_='foreignkey')
    op.drop_constraint(None, 'shop', type_='foreignkey')
    op.drop_column('shop', 'staff_id')
    op.drop_column('shop', 'owner_id')
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_column('product', 'show_on_store')
    op.drop_column('product', 'shop_id')
    op.drop_column('product', 'quantity')
    op.drop_column('product', 'price')
    op.drop_column('product', 'old_price')
    op.drop_constraint(None, 'file', type_='foreignkey')
    op.drop_column('file', 'product_id')
    op.alter_column('blacklisttoken', 'blacklisted_on',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_table('productimagerelation',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('file_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], name='productimagerelation_file_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='productimagerelation_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='productimagerelation_pkey')
    )
    op.create_index('ix_productimagerelation_id', 'productimagerelation', ['id'], unique=True)
    op.create_table('productshoprelation',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('product_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('shop_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('old_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='productshoprelation_product_id_fkey'),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], name='productshoprelation_shop_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='productshoprelation_pkey')
    )
    op.create_index('ix_productshoprelation_id', 'productshoprelation', ['id'], unique=True)
    op.create_table('usershoprelation',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('shop_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('position', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Должность сотрудника'),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], name='usershoprelation_shop_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='usershoprelation_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='usershoprelation_pkey')
    )
    op.create_index('ix_usershoprelation_id', 'usershoprelation', ['id'], unique=True)
    # ### end Alembic commands ###
