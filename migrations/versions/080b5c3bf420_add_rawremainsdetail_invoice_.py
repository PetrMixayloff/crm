"""add RawRemainsDetail, Invoice, InvoiceRecord tables

Revision ID: 080b5c3bf420
Revises: b61eba138800
Create Date: 2020-11-26 15:14:45.587419

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '080b5c3bf420'
down_revision = 'b61eba138800'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invoice',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('number', sa.String(length=255), nullable=True, comment='Номер'),
    sa.Column('date', sa.DateTime(), nullable=True, comment='Дата'),
    sa.Column('supplier', sa.String(length=255), nullable=True, comment='Поставщик'),
    sa.Column('remark', sa.String(length=255), nullable=True, comment='Примечание'),
    sa.Column('payment_method', sa.String(length=255), nullable=True, comment='Способ оплаты'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoicerecord',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('invoice_id', postgresql.UUID(as_uuid=True), nullable=False, comment='Накладная'),
    sa.Column('category_id', postgresql.UUID(as_uuid=True), nullable=False, comment='Категория'),
    sa.Column('raw_id', postgresql.UUID(as_uuid=True), nullable=False, comment='Название'),
    sa.Column('price', sa.Float(), nullable=True, comment='Цена за ед.'),
    sa.Column('quantity', sa.Float(), nullable=True, comment='Количество'),
    sa.Column('total', sa.Float(), nullable=True, comment='Сумма'),
    sa.ForeignKeyConstraint(['category_id'], ['rawcategory.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['raw_id'], ['raw.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rawremainsdetail',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('raw_id', postgresql.UUID(as_uuid=True), nullable=False, comment='Название'),
    sa.Column('invoice_id', postgresql.UUID(as_uuid=True), nullable=False, comment='Накладная'),
    sa.Column('price', sa.Float(), nullable=True, comment='Цена за ед.'),
    sa.Column('quantity', sa.Float(), nullable=True, comment='Количество'),
    sa.Column('total', sa.Float(), nullable=True, comment='Сумма'),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['raw_id'], ['raw.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('raw', sa.Column('cost', sa.Float(), nullable=True, comment='Стоимость остатка'))
    op.add_column('raw', sa.Column('reserved', sa.Float(), nullable=True, comment='Зарезервировано'))
    op.alter_column('raw', 'quantity',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_comment='Общий остаток',
               existing_nullable=True)
    op.drop_column('raw', 'price')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('raw', sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='Суммарная стоимость остатка'))
    op.alter_column('raw', 'quantity',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_comment='Общий остаток',
               existing_nullable=True)
    op.drop_column('raw', 'reserved')
    op.drop_column('raw', 'cost')
    op.drop_table('rawremainsdetail')
    op.drop_table('invoicerecord')
    op.drop_table('invoice')
    # ### end Alembic commands ###
