"""add orders and clients tables

Revision ID: 5057aba9a876
Revises: f2a3e45ef829
Create Date: 2020-11-05 17:12:22.699906

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5057aba9a876'
down_revision = 'f2a3e45ef829'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('shop_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('phone', sa.String(length=255), nullable=False, comment='Номер телефона'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Имя'),
    sa.Column('address', sa.String(length=255), nullable=True, comment='Адрес'),
    sa.Column('discount', sa.String(length=255), nullable=True, comment='Дисконтная карта'),
    sa.Column('comment', sa.String(length=255), nullable=True, comment='Примечание'),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ordersproductsrelation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('orders', sa.Column('amount', sa.Float(), nullable=False, comment='К оплате с учетом предоплаты'))
    op.add_column('orders', sa.Column('amount_type', sa.String(length=255), nullable=True, comment='Тип внесения оплаты'))
    op.add_column('orders', sa.Column('client_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('orders', sa.Column('courier_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('orders', sa.Column('created_by_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('orders', sa.Column('delivery', sa.Boolean(), nullable=False, comment='Доставка/самовывоз'))
    op.add_column('orders', sa.Column('discount', sa.Float(), nullable=True, comment='Скидка'))
    op.add_column('orders', sa.Column('make_by_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('orders', sa.Column('prepay', sa.Float(), nullable=True, comment='Предоплата'))
    op.add_column('orders', sa.Column('prepay_type', sa.String(length=255), nullable=True, comment='Тип внесения предоплаты'))
    op.add_column('orders', sa.Column('rating', sa.Integer(), nullable=True, comment='Оценка от клиента'))
    op.add_column('orders', sa.Column('status', sa.String(length=255), nullable=True, comment='Статус'))
    op.add_column('orders', sa.Column('total_cost', sa.Float(), nullable=False, comment='Сумма заказа'))
    op.drop_constraint('orders_created_by_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'user', ['make_by_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'client', ['client_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'user', ['courier_id'], ['id'])
    op.drop_column('orders', 'created_by')
    op.drop_constraint('productrawrelation_raw_id_fkey', 'productrawrelation', type_='foreignkey')
    op.create_foreign_key(None, 'productrawrelation', 'raw', ['raw_id'], ['id'])
    op.drop_constraint('raw_category_id_fkey', 'raw', type_='foreignkey')
    op.create_foreign_key(None, 'raw', 'rawcategory', ['category_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'raw', type_='foreignkey')
    op.create_foreign_key('raw_category_id_fkey', 'raw', 'rawcategory', ['category_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'productrawrelation', type_='foreignkey')
    op.create_foreign_key('productrawrelation_raw_id_fkey', 'productrawrelation', 'raw', ['raw_id'], ['id'], ondelete='CASCADE')
    op.add_column('orders', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_created_by_fkey', 'orders', 'user', ['created_by'], ['id'])
    op.drop_column('orders', 'total_cost')
    op.drop_column('orders', 'status')
    op.drop_column('orders', 'rating')
    op.drop_column('orders', 'prepay_type')
    op.drop_column('orders', 'prepay')
    op.drop_column('orders', 'make_by_id')
    op.drop_column('orders', 'discount')
    op.drop_column('orders', 'delivery')
    op.drop_column('orders', 'created_by_id')
    op.drop_column('orders', 'courier_id')
    op.drop_column('orders', 'client_id')
    op.drop_column('orders', 'amount_type')
    op.drop_column('orders', 'amount')
    op.drop_table('ordersproductsrelation')
    op.drop_table('client')
    # ### end Alembic commands ###
